@page
@model TurismoNeuquen.Pages.DetailsPoiModel
@{
    // Retrieve the POI details from the model
    var poi = Model.PointOfInterest;
}

<head>
    <link rel="stylesheet" href="~/css/poi-details.css" />
</head>

<div class="container my-0">

    <div class="row">
        <!-- Map on the left and Details on the right for large screens -->
        <div class="col-md-6 order-md-2">
            
            <!-- POI Details Card -->
            <div class="card shadow-sm">

                <img src="@poi.ImageName" alt="PoI Image" class="img-fluid w-100 main-img-poi" />

                <div class="card-header">
                    <h2 class="card-title">@poi.Name</h2>

                    <!-- Event Details -->
                    <h6 id="eventFields" class="card-subtitle">@Model.Event.EventDate.ToString("f")</h6>
                </div>

                <div class="card-body">
                    <!-- Attraction Details -->
                    <div id="attractionFields">
                        <p class="card-text"> Abierto los días: @GetOpenDays(Model.Attraction.OpenDays)</p>
                        <p class="card-text">Horario: @Model.Attraction.OpeningTime?.ToString("HH:mm") - @Model.Attraction.ClosingTime?.ToString("HH:mm")</p>
                    </div>

                    <h7 class="card-text">Descripción:</h7>
                    <p class="card-text">@poi.Description</p>
                </div>

                <!-- Button for Directions -->
                <div class="card-body">
                    <a asp-page="ComoLlegar" asp-route-id="@poi.Id" class="btn btn-secondary">Como Llegar</a>
                </div>
            </div>
        </div>

        <!-- Map on the left (or bottom small screens) -->
        <div class="col-md-6 order-md-1 map_container">
            <div id="poiMap"></div>
        </div>
    </div>
</div>

<!-- Include Leaflet CSS and JavaScript libraries -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        showFields();

        // Get the POI latitude and longitude from the Razor model
        const poiLat = @poi.Latitude;
        const poiLng = @poi.Longitude;

        // Initialize the map centered on the POI's location
        const map = L.map('poiMap').setView([poiLat, poiLng], 13);

        // Add OpenStreetMap tiles to the map
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Add a marker at the POI location with a popup containing the POI name
        L.marker([poiLat, poiLng])
            .addTo(map)
            .bindPopup(`<b>${poi.Name}</b><br>${poi.Description}`)
            .openPopup();
    });

    function showFields() {
        // Get the type using Razor to output the correct value
        const type = @Model.Type;

        // Get the fieldsets for attraction and event
        const attractionFields = document.getElementById("attractionFields");
        const eventFields = document.getElementById("eventFields");

        if (type == 1) {
            // Show the attraction fields and hide the event fields
            attractionFields.style.display = "block";
            eventFields.style.display = "none";
        } else {
            // Show the event fields and hide the attraction fields
            attractionFields.style.display = "none";
            eventFields.style.display = "block";
        }
    }
</script>

@functions {
    // Helper function to convert binary open days to human-readable format
    private string GetOpenDays(string openDaysBinary)
    {
        if (string.IsNullOrEmpty(openDaysBinary))
            return "Not specified";

        var daysOfWeek = new[] { "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo" };
        var openDays = new List<string>();

        for (int i = 0; i < openDaysBinary.Length && i < daysOfWeek.Length; i++)
        {
            if (openDaysBinary[i] == '1')
                openDays.Add(daysOfWeek[i]);
        }

        return string.Join(", ", openDays);
    }
}