// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurismoNeuquen.Data;

#nullable disable

namespace TurismoNeuquen.Migrations
{
    [DbContext(typeof(dataContext))]
    [Migration("20241117043133_ChangesinPOIS")]
    partial class ChangesinPOIS
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TurismoNeuquen.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TurismoNeuquen.Models.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PointsOfInterest");

                    b.HasDiscriminator().HasValue("PointOfInterest");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TurismoNeuquen.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TurismoNeuquen.Models.Attraction", b =>
                {
                    b.HasBaseType("TurismoNeuquen.Models.PointOfInterest");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("OpenDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.HasDiscriminator().HasValue("Attraction");
                });

            modelBuilder.Entity("TurismoNeuquen.Models.Event", b =>
                {
                    b.HasBaseType("TurismoNeuquen.Models.PointOfInterest");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Event");
                });
#pragma warning restore 612, 618
        }
    }
}
